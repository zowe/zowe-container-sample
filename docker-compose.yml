#########################################################################################
#                                                                                       #
# This program and the accompanying materials are made available under the terms of the #
# Eclipse Public License v2.0 which accompanies this distribution, and is available at  #
# https://www.eclipse.org/legal/epl-v20.html                                            #
#                                                                                       #
# SPDX-License-Identifier: EPL-2.0                                                      #
#                                                                                       #
# Copyright IBM Corporation 2020, 2021                                                  #
#                                                                                       #
#########################################################################################
version: "3"
services:
    discovery-service:
        restart: always
        hostname: discovery-service
        build:
            dockerfile: Dockerfile.discovery
            context: ./build/apiml/
        image: discovery-service
        command:
            [
                "--spring.config.additional-location=file:/app/discovery-service.yml",
                "--spring.profiles.active=https",
            ]
        ports:
            - "10011:10011"
        volumes:
            - ./docker/apiml/discovery-service.yml:/app/discovery-service.yml
            - ./certificates/discovery-service/keystore.p12:/app/tls/mounted-keystore/keystore.p12
            - ./certificates/truststore.p12:/app/tls/mounted-truststore/truststore.p12
            - ./certificates/ca/ca.crt:/app/tls/mounted-keystore/ca.crt
            - ./docker/apiml/api-defs:/app/config/api-defs
    gateway-service:
        restart: always
        hostname: gateway-service
        build:
            dockerfile: Dockerfile.gateway
            context: ./build/apiml/
        image: gateway-service
        command:
            [
                "--spring.config.additional-location=file:/app/gateway-service.yml",
            ]
        ports:
            - "10010:10010"
        volumes:
            - ./docker/apiml/gateway-service.yml:/app/gateway-service.yml
            - ./certificates/gateway-service/keystore.p12:/app/tls/mounted-keystore/keystore.p12
            - ./certificates/truststore.p12:/app/tls/mounted-truststore/truststore.p12
            - ./certificates/ca/ca.crt:/app/tls/mounted-keystore/ca.crt
    api-catalog-service:
        restart: always
        hostname: api-catalog-service
        build:
            dockerfile: Dockerfile.catalog
            context: ./build/apiml/
        image: api-catalog-service
        command:
            [
                "--spring.config.additional-location=file:/app/api-catalog-service.yml",
            ]
        ports:
            - "10014:10014"
        volumes:
            - ./docker/apiml/api-catalog-service.yml:/app/api-catalog-service.yml
            - ./certificates/api-catalog-service/keystore.p12:/app/tls/mounted-keystore/keystore.p12
            - ./certificates/truststore.p12:/app/tls/mounted-truststore/truststore.p12
            - ./certificates/ca/ca.crt:/app/tls/mounted-keystore/ca.crt
            - dropins-volume:/dropins
    datasets-api-service:
        restart: always
        hostname: datasets-api-service
        build:
            dockerfile: Dockerfile.datasets
            context: ./build/explorers/
        image: datasets-api-service
        command:
            [
                "--spring.config.additional-location=file:/app/datasets-api-service.yml",
            ]
        ports:
            - "18547:18547"
        volumes:
            - ./docker/explorers/datasets-api-service.yml:/app/datasets-api-service.yml
            - ./certificates/datasets-api-service/keystore.p12:/app/tls/mounted-keystore/keystore.p12
            - ./certificates/truststore.p12:/app/tls/mounted-truststore/truststore.p12
            - ./certificates/ca/ca.crt:/app/tls/mounted-keystore/ca.crt
    jobs-api-service:
        restart: always
        hostname: jobs-api-service
        build:
            dockerfile: Dockerfile.jobs
            context: ./build/explorers/
        image: jobs-api-service
        command:
            [
                "--spring.config.additional-location=file:/app/jobs-api-service.yml",
            ]
        ports:
            - "18545:18545"
        volumes:
            - ./docker/explorers/jobs-api-service.yml:/app/jobs-api-service.yml
            - ./certificates/jobs-api-service/keystore.p12:/app/tls/mounted-keystore/keystore.p12
            - ./certificates/truststore.p12:/app/tls/mounted-truststore/truststore.p12
            - ./certificates/ca/ca.crt:/app/tls/mounted-keystore/ca.crt
    zlux-app-server:
        environment:
            ZWED_agent_host: tvt5003.svl.ibm.com
            ZWED_agent_https_ipAddresses: "1.2.3.4"
            ZWED_agent_https_port: 48542
            ZWED_node_https_keys: "/tls/tls.key,"
            ZWED_node_https_certificates: "/tls/tls.crt,"
            ZWED_node_https_certificateAuthorities: "/tls/ca.crt,"
            ZWED_dataserviceAuthentication_defaultAuthentication: "zss"
            ZWED_node_mediationLayer_enabled: "true"
            ZWED_node_mediationLayer_server_gatewayPort: 10010
            ZWED_node_mediationLayer_server_gatewayHost: "gateway-service"
            ZWED_node_mediationLayer_server_port: 10011
            ZWED_node_mediationLayer_server_hostname: "discovery-service"
            ZLUX_NO_CLUSTER: 1
        restart: always
        hostname: zlux-app-server
        build:
            dockerfile: Dockerfile.zlux
            context: ./build/zlux
        image: zlux-app-server
        ports:
            - "8544:8544"
        volumes:
            - dropins-volume:/dropins
            - instance-volume:/root/.zowe
            - ./certificates/zlux-app-server/tls.key:/tls/tls.key
            - ./certificates/zlux-app-server/tls.crt:/tls/tls.crt
            - ./certificates/ca/ca.crt:/tls/ca.crt
    zss-auth-plugin:
        restart: "no"
        hostname: zss-auth-plugin
        build:
            dockerfile: Dockerfile.zssauth
            context: ./build/zlux
        image: zss-auth-plugin
        volumes:
            - dropins-volume:/dropins
    zlux-editor-plugin:
        restart: "no"
        hostname: zlux-editor-plugin
        build:
            dockerfile: Dockerfile.editor
            context: ./build/zlux
        image: zlux-editor-plugin
        volumes:
            - dropins-volume:/dropins
    zlux-tn3270-plugin:
        restart: "no"
        hostname: zlux-tn3270-plugin
        build:
            dockerfile: Dockerfile.tn3270
            context: ./build/zlux
        image: zlux-tn3270-plugin
        volumes:
            - dropins-volume:/dropins
    zlux-vt-plugin:
        restart: "no"
        hostname: zlux-vt-plugin
        build:
            dockerfile: Dockerfile.vt
            context: ./build/zlux
        image: zlux-vt-plugin
        volumes:
            - dropins-volume:/dropins
    explorer-jes:
        environment:
            EXPLORER_UI_PORT: 18546
            KEYSTORE_KEY: "/app/tls/tls.key"
            KEYSTORE_CERTIFICATE: "/app/tls/tls.crt"
            ZOWE_EXPLORER_FRAME_ANCESTORS: "localhost:*,127.0.0.1:*,zlux-app-server:*,gateway-service:*"
        restart: always
        hostname: explorer-jes
        build:
            dockerfile: Dockerfile.explorer-jes
            context: ./build/explorers/
        image: explorer-jes
        ports:
            - "18546:18546"
        volumes:
            - ./certificates/explorer-ui-server/tls.key:/app/tls/tls.key
            - ./certificates/explorer-ui-server/tls.crt:/app/tls/tls.crt
            - dropins-volume:/dropins
    explorer-mvs:
        environment:
            EXPLORER_UI_PORT: 18548
            KEYSTORE_KEY: "/app/tls/tls.key"
            KEYSTORE_CERTIFICATE: "/app/tls/tls.crt"
            ZOWE_EXPLORER_FRAME_ANCESTORS: "localhost:*,127.0.0.1:*,zlux-app-server:*,gateway-service:*"
        restart: always
        hostname: explorer-mvs
        build:
            dockerfile: Dockerfile.explorer-mvs
            context: ./build/explorers/
        image: explorer-mvs
        ports:
            - "18548:18548"
        volumes:
            - ./certificates/explorer-ui-server/tls.key:/app/tls/tls.key
            - ./certificates/explorer-ui-server/tls.crt:/app/tls/tls.crt
            - dropins-volume:/dropins
    explorer-uss:
        environment:
            EXPLORER_UI_PORT: 18550
            KEYSTORE_KEY: "/app/tls/tls.key"
            KEYSTORE_CERTIFICATE: "/app/tls/tls.crt"
            ZOWE_EXPLORER_FRAME_ANCESTORS: "localhost:*,127.0.0.1:*,zlux-app-server:*,gateway-service:*"
        restart: always
        hostname: explorer-uss
        build:
            dockerfile: Dockerfile.explorer-uss
            context: ./build/explorers/
        image: explorer-uss
        ports:
            - "18550:18550"
        volumes:
            - ./certificates/explorer-ui-server/tls.key:/app/tls/tls.key
            - ./certificates/explorer-ui-server/tls.crt:/app/tls/tls.crt
            - dropins-volume:/dropins
volumes:
    dropins-volume:
    instance-volume:
